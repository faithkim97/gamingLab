{"version":3,"sources":["GameEntry.js","GameFieldEntry.js","GenreDropdown.js","LoginPage.js","Admin.js","EditGenreTable.js","ModeDropdown.js","EditModeTable.js","EditConsole.js","RatingDropdown.js","EditGameForm.js","DeleteGame.js","EditGamePage.js","GameTable.js","GameFieldRadioMenu.js","BooleanOptions.js","SearchEngine.js","ConsoleDropdown.js","AddGameForm.js","ModeTable.js","EditModePage.js","GenreTable.js","EditGenrePage.js","ConsoleTable.js","EditConsolePage.js","About.js","AppRouter.js","serviceWorker.js","index.js"],"names":["GameEntry","props","games","value","admin","masterGame","systemConsole","i","length","consoleMap","console","checkedOut","game","isCheckedOut","isDigital","genres","modes","seen","Set","map","g","genreMap","has","genre","add","push","modeMap","playableMode","mode","url","id","react_default","a","createElement","title","rating","quantity","description","href","style","color","Button","backgroundColor","GameFieldEntry","field","variant","onClick","GenreDropdown","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showMenu","pickedGenres","checkedMap","_this2","fetch","then","response","json","data","setState","forEach","e","onAdd","useId","genreIds","log","_this3","target","checked","slice","editMode","itemToRemove","splice","removeFromPickedGenres","preventDefault","_this4","genreButtons","type","onChange","handleGenreCheck","className","handleClickAdd","Component","LoginPage","password","headers","Headers","set","btoa","status","window","location","localStorage","setItem","setPassword","width","Form","onSubmit","handleSubmit","Label","Control","changePassword","getPassword","getItem","adminFetch","adminFetchPost","body","method","Accept","Content-Type","Authorization","JSON","stringify","Admin","active","Nav","fill","defaultActivekey","fontFamily","Item","Link","DropdownButton","Dropdown","EditGenreTable","mapId","reload","masterGames","genreMaps","mg","createGenreList","genreEntries","src_GameFieldEntry","deleteGenreMapping","padding","Table","striped","bordered","hover","size","src_GenreDropdown","handleAddGenre","ModeDropdown","pickedModes","m","catch","picked","removeFromPickedModes","modeIds","modeButtons","handleModeCheck","onAddMode","EditModeTable","modeMaps","createModeList","modeEntries","deleteModeMapping","src_ModeDropdown","handleAddMode","EditConsole","consoles","pickedConsole","gameId","consoleMenu","c","name","handleInputChange","consoleEntry","handleDeleteConsole","changeConsole","RatingDropdown","ratings","ratingMap","r","key","Divider","EditGameForm","newTitle","digital","d","_this$state","handleUpdate","Group","changeTitle","Row","Col","Check","changeCheckedOut","changeDigital","changeQuantity","src_RatingDropdown","changeRating","as","rows","changeDescription","DeleteGame","showAlert","handleShow","Modal","show","onHide","handleClose","Header","closeButton","Body","Footer","handleDelete","EditGamePage","match","params","src_DeleteGame","src_EditGameForm","src_EditGenreTable","src_EditModeTable","src_EditConsole","GameTable","showGames","editGamePage","newValue","seenIds","subgames","subgames1","gameMap","src_GameEntry","gameTable","showGameTable","GameFieldRadioMenu","menu","f","BooleanOptions","SearchEngine","isSearch","console_id","mode_id","bind","assertThisInitialized","keyword","_this5","gameList","src_GameTable_0","Navbar","bg","src_GameFieldRadioMenu","handleConsole","handleMode","handleRating","src_BooleanOptions","handleCheckedOut","handleDigital","InputGroup","Prepend","Text","inline","FormControl","handleKey","aria-label","aria-describedby","ConsoleDropdown","AddGameForm","margin","textAlign","changeDesc","defineProperty","addGenre","addMode","src_ConsoleDropdown","ModeTable","idToDelete","modeId","deleteMode","EditModePage","newMode","src_ModeTable","handleChange","handleClick","GenreTable","genreId","deleteGenre","EditGenrePage","newGenre","th","ct","src_GenreTable","ConsoleTable","consoleId","deleteConsole","EditConsolePage","newConsole","src_ConsoleTable","About","overflow","Image","src","Search","HomeNav","src_SearchEngine","AdminPage","src_Admin","Home","Carous","defaultActiveKey","Carousel","alt","height","Caption","AboutGamingLab","src_About","AppRouter","fontSize","react_router_dom","react_router","path","component","Boolean","hostname","ReactDOM","render","src_AppRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8233eca6.chunk.js","sourcesContent":["import React from 'react';\nimport {Button} from 'react-bootstrap';\n\nfunction GameEntry(props) {\n  const games = props.value;\n  const admin = props.admin;\n  const masterGame = games[0];\n  let systemConsole = null;\n  //finding mastergame with no null console\n  for (let i = 0; i < games.length; i++) {\n    if (games[i].consoleMap != null) {\n      systemConsole = games[i].consoleMap.console.console;\n    }\n  }\n\n  const checkedOut = masterGame.game.isCheckedOut ? \"true\" : \"false\";\n  const isDigital = masterGame.game.isDigital ? \"true\" : \"false\";\n\n  const genres = [];\n  const modes = [];\n  const seen = new Set();\n  //I think this prints repeitive mapping\n  //the includes doesn't work\n  games.map(g=>{\n    if(g.genreMap != null && !seen.has(g.genreMap.genre.genre)) {\n      seen.add(g.genreMap.genre.genre);\n      genres.push(\" \" + g.genreMap.genre.genre);\n    }\n\n    if(g.modeMap != null && !seen.has(g.modeMap.playableMode.mode)) {\n      seen.add(g.modeMap.playableMode.mode);\n      modes.push(\" \" + g.modeMap.playableMode.mode);\n    }\n  });\n  // console.log(genres);\n\n  const url = \"/admin/editgame/gameId=\"+masterGame.game.id;\n\n  return(\n    <tbody>\n  <tr>\n    {admin ? (<td>{masterGame.game.id}</td>) : (null)}\n    <td> {masterGame.game.title} </td>\n    <td>{genres}</td>\n    <td>{systemConsole}</td>\n    <td>{masterGame.game.rating}</td>\n    <td>{modes}</td>\n    {(admin) ?\n      <td>{checkedOut}</td>\n    : null}\n    {(admin) ?\n    <td>{isDigital}</td>\n    : null}\n    {admin ? (<td>{masterGame.game.quantity}</td>) : (null)}\n    <td>{masterGame.game.description}</td>\n    {admin ? (<td><a href ={url} style={{color: \"blue\"}}><Button style={{backgroundColor: \"yellow\", color:\"black\"}}>Edit Game</Button></a></td>) : (null)}\n  </tr>\n  </tbody>\n);\n}\n\nexport default GameEntry;\n","import React, { Component } from 'react';\nimport {Button} from 'react-bootstrap';\n\nfunction GameFieldEntry(props) {\n  return(\n      <tr>\n        <td>{props.id}</td>\n        <td>{props.field}</td>\n        <td><Button variant=\"danger\" onClick={props.onClick}>Delete</Button></td>\n      </tr>\n\n\n  );\n\n\n}//endclass\n\nexport default GameFieldEntry;\n","import React, { Component } from 'react';\nimport {Button} from 'react-bootstrap';\n\n\nfunction removeFromPickedGenres(itemToRemove, genres) {\n    for (let i = 0; i < genres.length; i++) {\n      if (itemToRemove.id == genres[i].id) {\n        genres.splice(i,1);\n      }\n    }\n\n    return genres;\n}\n\nclass GenreDropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMenu: false,\n      genres: [],\n      pickedGenres: [],\n      checkedMap: {},\n    };\n\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/game/genres').then(response => response.json())\n    .then(data => this.setState({genres: data},()=>{\n      const checkedMap = {};\n      const genres = this.state.genres;\n      genres.forEach(g =>{\n        checkedMap[g.id] = false;\n      });\n      this.setState({checkedMap: checkedMap});\n    }))\n\n  }\n\n  handleClickAdd(e) {\n    const onAdd = this.props.onAdd;\n    if (this.props.useId) {\n      const genreIds = [];\n      this.state.pickedGenres.forEach(g => {\n        genreIds.push(g.id)\n      });\n      onAdd(genreIds);\n    } else{\n      console.log(onAdd);\n      onAdd(this.state.pickedGenres);\n\n    }\n\n  }\n\n  handleGenreCheck(e, genre) {\n    const checkedMap = this.state.checkedMap;\n    //check that current input is false. if it is, then when we clicked it, we need to make it true\n    checkedMap[genre.id] = !e.target.checked == false ? true : false;\n    this.setState({checkedMap: checkedMap});\n    if (!e.target.checked) {\n      const pickedGenres = removeFromPickedGenres(genre, this.state.pickedGenres);\n      this.setState({pickedGenres: pickedGenres});\n    } else {\n      const pickedGenres = this.state.pickedGenres.slice();\n      pickedGenres.push(genre);\n      this.setState({\n        pickedGenres: pickedGenres,\n      }, () =>{\n        if(!this.props.editMode) {\n          const onAdd = this.props.onAdd;\n          onAdd(this.state.pickedGenres);\n        }\n      });\n    }\n  }\n\n  showMenu(e) {\n    e.preventDefault();\n    const showMenu = this.state.showMenu;\n    this.setState({showMenu: !showMenu});\n  }\n\n  render() {\n    const genres = this.state.genres;\n    const useId = this.props.useId;\n    const genreButtons = genres.map((g,i)=>{\n      return(\n        <div>\n        <input type = \"checkbox\" checked={this.state.checkedMap[g.id]} value ={useId ? g.id : g} onChange={(e)=>this.handleGenreCheck(e, g)} />\n        {g.genre}\n        </div>\n      );\n    });\n\n    return(\n      <div>\n      <div className=\"menu\">\n        {genreButtons}\n      </div>\n      { this.props.editMode ?\n        (<div>\n          <Button variant=\"warning\" onClick={e=>this.handleClickAdd(e)}>Add Genre(s)</Button>\n        </div>)\n        :\n        (null)\n      }\n      </div>\n\n\n\n\n    );\n\n\n  }\n\n}\n\nexport default GenreDropdown;\n","import React, {Component} from 'react';\nimport Admin, {adminFetch, setPassword} from './Admin';\nimport {InputGroup, Button, Form} from 'react-bootstrap';\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n          password: '',\n        };\n    }\n\n    changePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        setPassword(this.state.password);\n    }\n\n\n    render() {\n       return(\n           <div style={{width: \"50%\"}}>\n           <h1>Log In</h1>\n           <Form onSubmit={e=>this.handleSubmit(e)}>\n               <Form.Label>Password </Form.Label>\n               <Form.Control type=\"password\" value={this.state.password} onChange={e=>this.changePassword(e)}/>\n               <input type=\"submit\" value=\"Login\"/>\n           </Form>\n           </div>\n       );\n\n    }\n\n\n}\n\nexport default LoginPage;","import React, { Component } from 'react';\nimport {Nav, Dropdown, DropdownButton} from \"react-bootstrap\";\nimport LoginPage from './LoginPage';\n\nexport function getPassword() {\n  return window.localStorage.getItem(\"admin-password\");\n}\n\nexport function adminFetch(url) {\n  let password = getPassword();\n\n  if (!password) {\n      window.location = '/login';\n    return null;\n  }\n  let headers = new Headers();\n  headers.set('Authorization', 'Basic ' + btoa(\"admin:\" + password));\n  return fetch(url, {\n    headers: headers,\n  });\n}\n\nexport function adminFetchPost(url, body) {\n    //the body is getting passed in fine, and should work\n    let password = getPassword();\n    if (!password) {\n        window.location = '/login';\n        return null;\n    }\n    let headers = new Headers();\n    headers.set('Authorization', 'Basic' + btoa(\"admin:\" +password));\n    headers.set(\"Accept\", \"application/json\");\n    headers.set(\"Content-Type\", \"application/json\");\n    console.log(body);\n    return fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Accept\":\"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"Authorization\":'Basic ' + btoa(\"admin:\" +password),\n        },\n        body: JSON.stringify(body),\n    });\n}\n\nexport function setPassword(password) {\n  let headers = new Headers();\n  headers.set('Authorization', 'Basic ' + btoa(\"admin:\" + password))\n  fetch(\"http://localhost:8080/admin\", {\n    headers: headers,\n  }).then((data) => {\n      if (data.status == 401) {\n          window.location ='/home';\n      } else {\n          window.localStorage.setItem(\"admin-password\", password);\n          window.location = '/admin';\n      }\n  });\n}\n\n// function activeLink(currLink) {\n//     let url = \"http://localhost:3000\";\n//     switch(currLink) {\n//         case url+\"/admin/search\":\n//             return \"/admin/search\";\n//         case url+\"/admin/addgame\":\n//             return \"/admin/addgame\";\n//     }\n//\n//     return '';\n//\n// }\n\n\nclass Admin extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        active: '',\n    }\n  }\n\n  //TODO we don't have admin fetch anymore in backend\n  componentDidMount() {\n    // adminFetch(\"http://localhost:8080/admin/fake.css\");\n  }\n\n  render() {\n      return(\n          <div>\n          <Nav fill variant=\"tabs\" defaultActivekey={this.state.active} style={{fontFamily:  \"Share Tech Mono, monospace\"}}>\n              <Nav.Item>\n                  <Nav.Link href=\"/home\">Home</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                  <Nav.Link href=\"/admin/search\">Search Games to Edit</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                  <Nav.Link href=\"/admin/addgame\">Add New Game</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                  <DropdownButton title=\"Edit Game Fields\">\n                      <Dropdown.Item href=\"/admin/editgenre\">Edit Genre</Dropdown.Item>\n                      <Dropdown.Item href=\"/admin/editconsole\">Edit Console</Dropdown.Item>\n                      <Dropdown.Item href=\"/admin/editmode\">Edit Playable Mode</Dropdown.Item>\n                  </DropdownButton>\n              </Nav.Item>\n          </Nav>\n          </div>\n      );\n\n  }\n\n}\nexport default Admin;\n","import React, { Component } from 'react';\nimport GameFieldEntry from './GameFieldEntry';\nimport GenreDropdown from './GenreDropdown';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Form, Table} from 'react-bootstrap';\nimport Admin, {adminFetch} from \"./Admin\";\n\nfunction createGenreList(masterGames) {\n  const genreMaps = [];\n  masterGames.map(mg => {\n    if (mg.genreMap != null) {\n      genreMaps.push(mg.genreMap);\n    }\n  });\n  return genreMaps;\n}\n\nfunction createGenreTable(genreTable) {\n  return(\n    <table>\n      <tbody>\n        <tr>\n          <th>Map ID</th>\n          <th>Current Genre</th>\n          <th>Edit Genre To:</th>\n          <th></th>\n        </tr>\n        {genreTable}\n      </tbody>\n    </table>\n  );\n}\n\n\nclass EditGenreTable extends Component {\n\n    constructor(props) {\n      super(props);\n    }\n\n    deleteGenreMapping(e, mapId){\n      let url = 'http://localhost:8080/admin/deleteGenreMap?mapId='+mapId;\n      adminFetch(url).then(()=>{window.location.reload();});\n    }\n\n    handleAddGenre(e) {\n      let url = 'http://localhost:8080/admin/mapGenreByGameGenreIds?gameId='+this.props.value[0].game.id+\"&genreIds=\"+e;\n      adminFetch(url).then(() => {window.location.reload();});\n\n    }\n\n    render() {\n      const masterGames = this.props.value;\n      const genres = createGenreList(masterGames);\n      const seen = new Set();\n      const genreEntries = masterGames.map(mg => {\n        if (mg.genreMap != null && !seen.has(mg.genreMap.id)) {\n          seen.add(mg.genreMap.id);\n          return(\n            <GameFieldEntry id={mg.genreMap.id} field = {mg.genreMap != null ? mg.genreMap.genre.genre : null} onClick={e =>this.deleteGenreMapping(e, mg.genreMap.id)}/>\n          );\n        }\n      });\n\n      return(\n        <div style={{backgroundColor: \"white\", width:\"50%\", padding: \"2%\"}}>\n      <Table striped bordered hover variant=\"dark\" size=\"sm\">\n        <thead>\n          <tr>\n            <th>Map Id</th>\n            <th>Genre</th>\n            <th></th>\n          </tr>\n          {genreEntries}\n        </thead>\n      </Table>\n        <GenreDropdown value = {masterGames[0].game} onAdd={e => this.handleAddGenre(e)} useId={true} editMode={true}/>\n      </div>\n\n      );\n    }\n\n\n}\n\nexport default EditGenreTable;\n","import React, { Component } from 'react';\nimport {Button} from 'react-bootstrap';\n\nfunction removeFromPickedModes(itemToRemove, modes) {\n    for (let i = 0; i < modes.length; i++) {\n      if (itemToRemove.id == modes[i].id) {\n        modes.splice(i,1);\n      }\n    }\n\n    return modes;\n}\n\nclass ModeDropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMenu: false,\n      modes: [],\n      pickedModes: [],\n      checkedMap: {},\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/game/modes').then(response => response.json())\n    .then(data => this.setState({modes: data}, () => {\n      const checkedMap = {};\n      const modes = this.state.modes;\n      modes.forEach(m =>{\n        checkedMap[m.id] = false;\n      });\n      this.setState({checkedMap: checkedMap});\n    }\n\n    )).catch(console.log(\"could not retrieve modes\"));\n  }\n\n\n  handleModeCheck(e, mode) {\n    const checkedMap = this.state.checkedMap;\n    checkedMap[mode.id] = !e.target.checked == false ? true : false;\n    this.setState({checkedMap: checkedMap});\n    if (!e.target.checked) {\n      const pickedModes = removeFromPickedModes(mode, this.state.pickedModes);\n      this.setState({pickedModes: pickedModes});\n    } else {\n      const picked = this.state.pickedModes.slice();\n      picked.push(mode);\n      this.setState({pickedModes: picked}, () => {\n        if(!this.props.editMode) {\n          const onAdd = this.props.onAdd;\n          onAdd(this.state.pickedModes);\n        }\n      });\n    }//endelse\n  }\n\n\n\n  onAddMode() {\n    const onAdd = this.props.onAdd;\n    if (this.props.useId) {\n      const modeIds = [];\n      this.state.pickedModes.forEach(m => {\n        modeIds.push(m.id)\n      });\n      onAdd(modeIds);\n    } else {\n      onAdd(this.state.pickedModes);\n\n    }\n  }\n\n  showMenu(e) {\n    e.preventDefault();\n    const showMenu = this.state.showMenu;\n    this.setState({showMenu: !showMenu});\n  }\n\n  render() {\n    const modes = this.state.modes;\n    const useId = this.props.useId;\n    const modeButtons = modes.map(m=> {\n      return(\n        <div>\n          <input type = \"checkbox\" checked={this.state.checkedMap[m.id]}\n          value = {useId ? m.id : m} onChange={e => this.handleModeCheck(e, m)} />\n          {m.mode}\n        </div>\n      );\n\n    });\n\n    return(\n      <div>\n        <div className=\"menu\">\n          {modeButtons}\n        </div>\n\n        {this.props.editMode ?\n          (<div>\n            <Button variant=\"warning\" onClick = {e=>this.onAddMode(e)}>Add Playable Mode(s)</Button>\n          </div>)\n          :\n          (null)\n        }\n      </div>\n\n\n    );\n\n  }\n\n\n}\n\nexport default ModeDropdown;\n","import React, { Component } from 'react';\nimport GameFieldEntry from './GameFieldEntry';\nimport ModeDropdown from './ModeDropdown';\nimport {Table} from 'react-bootstrap';\nimport {adminFetch} from \"./Admin\";\n\nfunction createModeList(masterGames) {\n  const modeMaps = [];\n  masterGames.map(mg => {\n    if (mg.genreMap != null) {\n      modeMaps.push(mg.genreMap);\n    }\n  });\n  return modeMaps;\n}\n\nclass EditModeTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modes:[],\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/game/modes').then(response => response.json())\n    .then(data => this.setState({modes: data})).catch(console.log(\"could not retrieve modes\"));\n  }\n\n  deleteModeMapping(e, mapId) {\n    let url = 'http://localhost:8080/admin/deleteModeMap?mapId='+mapId;\n    adminFetch(url).then(() => {window.location.reload();});\n  }\n  handleAddMode(e) {\n    let url = 'http://localhost:8080/admin/mapModeByModeGameIds?gameId='+this.props.value[0].game.id+\"&modeIds=\"+e;\n    adminFetch(url).then(() => {window.location.reload();});\n  }\n\n  render() {\n    const masterGames = this.props.value;\n    const modes = createModeList(masterGames);\n    const seen = new Set();\n    const modeEntries = masterGames.map(mg => {\n      if (mg.modeMap != null && !seen.has(mg.modeMap.id)){\n        seen.add(mg.modeMap.id);\n        return (\n          <GameFieldEntry id={mg.modeMap != null ? mg.modeMap.id : null} field = {mg.modeMap != null ? mg.modeMap.playableMode.mode : null}\n           onClick = {e=> this.deleteModeMapping(e, mg.modeMap.id)}/>\n        );\n      }\n    });\n\n    return(\n      <div style={{backgroundColor: \"white\", width: \"50%\", padding:\"2%\"}}>\n        <Table striped bordered hover variant=\"dark\" size=\"sm\">\n          <tbody>\n            <tr>\n              <th>Map Id</th>\n              <th>Playable Mode</th>\n              <th></th>\n            </tr>\n            {modeEntries}\n          </tbody>\n        </Table>\n        <ModeDropdown value = {masterGames[0].game} onAdd={e=>this.handleAddMode(e)} useId={true} editMode={true}/>\n      </div>\n    );\n\n  }\n\n\n}\n\nexport default EditModeTable;\n","import React, { Component } from 'react';\nimport GameFieldEntry from './GameFieldEntry';\nimport {Button, Table} from 'react-bootstrap';\nimport {adminFetch} from './Admin';\n\nclass EditConsole extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      consoles: [],\n      pickedConsole: -1,\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/game/consoles').then(response => response.json())\n    .then(data => this.setState({consoles: data})).catch(console.log(\"could not retrieve consoles\"));\n  }\n\n  handleInputChange(id) {\n    //delayed reaciton, pickedConsole doesn't get changed right away\n    this.setState({pickedConsole: id});\n  }\n\n  changeConsole(e, mapId, gameId) {\n    let url = 'http://localhost:8080/admin/replaceConsoleMap?mapId='+mapId+\"&consoleId=\"+this.state.pickedConsole\n        +\"&gameId=\"+gameId;\n  //   fetch('http://localhost:8080/admin/replaceConsoleMap?mapId='+mapId+\"&consoleId=\"+this.state.pickedConsole\n  // +\"&gameId=\"+gameId);\n  // window.location.reload();\n    adminFetch(url).then(()=> {window.location.reload();});\n\n\n\n  }\n\n  handleDeleteConsole(e, mapId) {\n    let url = \"http://localhost:8080/admin/deleteConsoleMap?mapId=\"+mapId;\n    // fetch(\"http://localhost:8080/admin/deleteConsoleMap?mapId=\"+mapId);\n    // window.location.reload();\n    adminFetch(url).then(()=>{window.location.reload();});\n  }\n\n\n  render() {\n    const consoles = this.state.consoles;\n    const masterGames = this.props.value;\n    let consoleMap = null;\n\n    for (let i = 0; i < masterGames.length; i++) {\n      if (masterGames[i].consoleMap != null) {\n        consoleMap = masterGames[i].consoleMap;\n        break;\n      }\n    }\n\n\n    //TODO can i make this the same as search engine so that it' not repetitive coding\n    const consoleMenu = consoles.map(c => {\n      return(\n        <div>\n          <input type=\"radio\" name =\"consoles\" value={c.id} onChange={e => this.handleInputChange(c.id)} />{c.console}\n        </div>\n      );\n    });\n\n\n\n    const consoleEntry = consoleMap != null ? <GameFieldEntry id={consoleMap.id} field={consoleMap.console.console}\n    onClick={e => this.handleDeleteConsole(e, consoleMap.id)}/> : null;\n\n\n    return(\n      <div style={{backgroundColor: \"#AFE5FF\", width:\"50%\", padding:\"2%\"}}>\n        <Table striped bordered hover variant=\"dark\" size=\"sm\">\n          <thead>\n            <tr>\n              <th>Map Id</th>\n              <th>Console</th>\n              <th></th>\n            </tr>\n            {consoleEntry}\n          </thead>\n        </Table>\n        {consoleMenu}\n        <Button variant=\"warning\" onClick={e => this.changeConsole(e, consoleMap != null ? consoleMap.id : -1\n          , masterGames[0].game.id)}>Change Console</Button>\n      </div>\n\n    );\n\n\n  }\n\n\n}\n\nexport default EditConsole;\n","import React, { Component } from 'react';\nimport {Dropdown, DropdownButton} from 'react-bootstrap';\n\nclass RatingDropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ratings: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/game/ratings').then(response => response.json())\n    .then(data => this.setState({ratings: data})).catch(console.log(\"could not retrieve rating\"));\n  }\n\n  render() {\n      const props = this.props;\n    const ratingMap = this.state.ratings.map((r) => {\n      return(\n        <div key={r}>\n          <input type = \"radio\" value={r} name = \"rating\" onChange={props.onChange} /> {r}\n          <Dropdown.Divider/>\n          </div>\n      );\n\n    });\n    return(\n      <div>\n        <DropdownButton title=\"Rating\" size={props.size} variant={props.variant}>\n        {ratingMap}\n        </DropdownButton>\n      </div>\n    );\n  }//endrender\n\n\n}\n\nexport default RatingDropdown;\n","import React, { Component } from 'react';\nimport RatingDropdown from './RatingDropdown';\nimport {Button, Form, Row, Col} from 'react-bootstrap';\nimport {adminFetchPost} from './Admin';\n\nclass EditGameForm extends Component {\n  constructor(props) {\n    super(props);\n    this.game = this.props.value.game;\n    this.state = {\n      newTitle:  this.game.title,\n      checkedOut: this.game.isCheckedOut,\n      digital: this.game.isDigital,\n      description: this.game.description == null ? '' : this.game.description,\n      quantity: this.game.quantity,\n      rating: this.game.rating,\n    };\n  }\n\n  changeTitle(e) {\n    this.setState({newTitle: e.target.value});\n  }\n\n  changeCheckedOut(e) {\n    let c = this.state.checkedOut;\n    this.setState({checkedOut: !c});\n  }\n\n  changeDigital(e) {\n    let d = this.state.digital;\n    this.setState({digital: !d});\n  }\n\n  changeQuantity(e) {\n    this.setState({quantity: e.target.value});\n  }\n\n  changeDescription(e) {\n    this.setState({description: e.target.value});\n  }\n\n  changeRating(e) {\n    this.setState({rating: e.target.value});\n  }\n\n  handleUpdate(e) {\n    e.preventDefault();\n    let url = 'http://localhost:8080/admin/editgame';\n    const {checkedOut, newTitle, digital, description, quantity, rating} = this.state;\n    let body = {\n      id: this.game.id,\n      isCheckedOut: checkedOut,\n      title: newTitle,\n      isDigital: digital,\n      description: this.state.description,\n      quantity: quantity,\n      rating: rating,\n    }\n\n    adminFetchPost(url, body).then(() => window.location.reload());\n  }//endupdate\n\n\n  render() {\n\n    return(\n        <div style={{backgroundColor: '#AFE5FF', width:\"50%\", padding:'1%'}}>\n          <border>\n          <Form onSubmit={e=>this.handleUpdate(e)} className=\"block-example border border-secondary\">\n            <Form.Group>\n              <Form.Label>Title</Form.Label>\n              <Form.Control size=\"sm\" value={this.state.newTitle} onChange={e=>this.changeTitle(e)}/>\n            </Form.Group>\n\n            <Form.Group>\n              <Row>\n                <Col>\n                  <Form.Label>Checked Out</Form.Label>\n                  <Form.Check checked={this.state.checkedOut} name=\"checkedout\" onChange={e=>this.changeCheckedOut(e)}/>\n                </Col>\n                <Col>\n                  <Form.Label>Digital</Form.Label>\n                  <Form.Check checked={this.state.digital} name=\"digital\" onChange={e=>this.changeDigital(e)}/>\n                </Col>\n              </Row>\n            </Form.Group>\n            <Form.Group>\n              <Row>\n                <Col>\n                  <Form.Label>Quantity</Form.Label>\n                  <input type=\"number\" value={this.state.quantity} name=\"quantity\" onChange={e=>this.changeQuantity(e)} />\n                </Col>\n                <Col>\n                  <RatingDropdown onChange={e=>this.changeRating(e)} />\n                </Col>\n              </Row>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Control as=\"textarea\" rows=\"4\" value={this.state.description} onChange={e=>this.changeDescription(e)}/>\n            </Form.Group>\n            <Button variant=\"warning\" type=\"submit\">Update Game Info</Button>\n          </Form>\n          </border>\n        </div>\n    )\n  }\n\n\n\n}//endclass\n\nexport default EditGameForm;\n","import React, { Component } from 'react';\nimport {Modal, Button} from 'react-bootstrap';\nimport Admin, {adminFetch} from \"./Admin\";\n\nclass DeleteGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false,\n    }\n  }\n\n  handleDelete(e) {\n    let url = 'http://localhost:8080/admin/deleteGame?gameId='+this.props.value.id;\n    adminFetch(url).then(() => {window.location.reload();});\n  }\n\n  handleShow(e) {\n    this.setState({\n      showAlert:true,\n    });\n  }\n\n  handleClose(e) {\n    this.setState({showAlert: false});\n  }\n\n  render() {\n    return(\n      <div>\n        <Button variant=\"danger\" onClick={e => this.handleShow(e)}>\n          Delete Game\n        </Button>\n        <Modal show={this.state.showAlert} onHide={e=>this.handleClose(e)}>\n          <Modal.Header closeButton>\n            WARNING\n          </Modal.Header>\n          <Modal.Body>\n            You are about to delete a game. Are you sure you want to delete?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={e=>this.handleDelete(e)}>Delete Game</Button>\n            <Button variant=\"secondary\" onClick={e=>this.handleClose(e)}>Nevermind</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n\n  }\n\n}\n\nexport default DeleteGame;\n","import React, { Component } from 'react';\nimport EditGenreTable from './EditGenreTable';\nimport EditModeTable from './EditModeTable';\nimport EditConsole from './EditConsole';\nimport EditGameForm from './EditGameForm';\nimport DeleteGame from './DeleteGame';\nimport {Row} from 'react-bootstrap';\n\nclass EditGamePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      masterGames: [],\n    };\n  }\n\n  componentDidMount() {\n    const {gameId} = this.props.match.params;\n    fetch('http://localhost:8080/game/masterGamesByGameId?gameId='+gameId).then(response => response.json())\n    .then(data => this.setState({masterGames: data}));\n  }\n\n  render() {\n\n    //passing a list of master games set by id\n    const masterGames = this.state.masterGames;\n    const game = masterGames[0];\n    if ( game != null) {\n      return(\n        <div>\n            <DeleteGame value ={game.game} />\n            <Row>\n          <EditGameForm value={game}/>\n          <EditGenreTable value = {masterGames}/>\n          <EditModeTable value = {masterGames} />\n          <EditConsole value = {masterGames} />\n            </Row>\n        </div>\n\n      );\n    }\n      return (null);\n\n  }\n\n}\n\nexport default EditGamePage;\n","import React, { Component } from 'react';\nimport GameEntry from './GameEntry';\nimport './GameTable.css';\nimport EditGamePage from './EditGamePage';\nimport {Table} from 'react-bootstrap';\n\nfunction showGameTable(gameMap, admin) {\n  return(\n    <Table striped bordered hover variant=\"dark\">\n      <thead>\n        <tr>\n        {admin ? (<th>ID</th>) : (null)}\n        <th>Title</th>\n        <th>Genre</th>\n        <th>Console</th>\n        <th>Rating</th>\n        <th>Playable Modes</th>\n        {admin ? (<th>Checked Out </th>) : (null)}\n        {admin ? (<th>Digital</th>) : (null)}\n        {admin ? (<th>Quantity</th>) : (null)}\n        <th>Description</th>\n      </tr>\n      </thead>\n    {gameMap}\n    </Table>\n  );\n}\n\nclass GameTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showGames: false,\n    }\n    this.editGamePage = null;\n  }\n\n  // handleEditGame(subgames1) {\n  //   // window.history.pushState(\"/admin/editGame\", {gameId: subgames1[0].game.id})\n  //   this.setState({showGames: false});\n  //   // this.editGamePage = <EditGamePage value={subgames1}/>\n  // }\n\n\n  handleShowGames(e) {\n    e.preventDefault();\n    const newValue = this.state.showGames;\n    this.setState({showGames: !newValue});\n  }\n\n\n  render() {\n    const admin = this.props.admin;\n    const games = this.props.games;\n    let seenIds = new Set([games[0] ? games[0].game.id : null]);\n    let subgames = [];\n    let subgames1 = [];\n    const gameMap = games.map(g=> {\n      if(!seenIds.has(g.game.id)){\n        seenIds.add(g.game.id);\n        subgames1 = subgames.slice();\n        subgames = [];\n        subgames.push(g);\n        return (<GameEntry admin={admin} value = {subgames1}/>);\n\n      }\n      subgames.push(g);\n    });\n    //getting the last game\n    if (subgames.length > 0) {\n      gameMap.push(<GameEntry admin={admin} value = {subgames}/>);\n    }\n\n\n    const gameTable = showGameTable(gameMap, admin);\n\n    return (\n      <div>\n        {gameTable}\n        {admin ? (this.editGamePage) : (null)}\n      </div>\n    );\n  }\n}\n\nexport default GameTable;\n","import React, { Component } from 'react';\nimport {Dropdown, DropdownButton} from 'react-bootstrap';\n\nfunction GameFieldRadioMenu(props) {\n  const field = props.field;\n  const menu = field.map( f => {\n    return(\n      <div key = {f.id}>\n          <input type = 'radio' value = {f.id} name = {props.type} onChange={props.onChange} />\n        { props.type === \"console\" ? (f.console ): (f.mode)}\n        <Dropdown.Divider/>\n      </div>\n    )\n  });\n\n  menu.push(\n    <div>\n      <input type = 'radio' value = {-1} name = {props.type} onChange={props.onChange} /> None\n    </div>\n  );\n\n  return (\n      <DropdownButton title={props.name} size={props.size} variant={props.variant}>\n          {menu}\n      </DropdownButton>\n  );\n\n\n}\n\nexport default GameFieldRadioMenu;\n","import React, { Component } from 'react';\nimport {DropdownButton, Dropdown} from 'react-bootstrap';\n\n\n\n\n    function BooleanOptions(props) {\n        return (\n            <DropdownButton title={props.title} variant={props.variant} size={props.size}>\n               <input type=\"radio\" value={true} name={props.name} onChange={props.onChange}/> Yes\n                <Dropdown.Divider/>\n                <input type=\"radio\" value={false} name={props.name} onChange={props.onChange}/>No\n                <Dropdown.Divider/>\n               <input type=\"radio\" value={null} name={props.name} onChange={props.onChange}/>None\n            </DropdownButton>\n\n        );\n\n\n    }\n\n\nexport default BooleanOptions;\n","import React, { Component } from 'react';\nimport GameTable from './GameTable';\nimport GameFieldRadioMenu from './GameFieldRadioMenu';\nimport RatingDropdown from './RatingDropdown';\nimport BooleanOptions from './BooleanOptions';\nimport {InputGroup, FormControl,Nav,Navbar, Form, Button} from 'react-bootstrap';\n\n\nclass SearchEngine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      games: [],\n      consoles: [],\n      ratings:[],\n      modes: [],\n      isSearch: false,\n      key: null,\n      checkedOut: null,\n      digital: null,\n      console_id: -1,\n      mode_id: -1,\n      rating:'NONE',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/game/consoles').then(response => response.json())\n    .then(data => this.setState({consoles: data})).catch(console.log(\"could not retrieve consoles\"));\n\n    fetch('http://localhost:8080/game/modes').then(response => response.json())\n    .then(data => this.setState({modes: data})).catch(console.log(\"could not retrieve playable modes\"));\n\n    fetch('http://localhost:8080/game/ratings').then(response => response.json())\n    .then(data => this.setState({ratings: data})).catch(console.log(\"could not retrieve rating\"));\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.setState({isSearch: true});\n    fetch('http://localhost:8080/game/findgame',\n    {method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      keyword:this.state.key,\n      game: {\n        isCheckedOut: this.state.checkedOut,\n        isDigital: this.state.digital,\n        rating: this.state.rating,\n      },\n      console: {\n        id: this.state.console_id,\n      },\n      modes: [{\n        id: this.state.mode_id,\n      }],\n\n    })\n    }).then(response => response.json())\n    .then(data => this.setState({games: data, isSearch: true})).catch(function() {console.log(\"error\")});\n\n  }\n\n  handleKey(e) {\n    this.setState({key: e.target.value});\n  }\n\n  handleConsole(e) {\n    this.setState({console_id: e.target.value});\n  }\n\n  handleMode(e) {\n    this.setState({mode_id: e.target.value});\n  }\n\n  handleRating(e) {\n    this.setState({rating: e.target.value});\n  }\n\n  handleCheckedOut(e) {\n    this.setState({\n        checkedOut: e.target.value,\n    }, () => {console.log(this.state.checkedOut)});\n  }\n\n  handleDigital(e) {\n    this.setState({digital: e.target.value});\n  }\n\n\n\n\n  render() {\n    const {games, isSearch, consoles, modes, ratings} = this.state;\n    const gameList = isSearch === false ? null :\n    <GameTable admin = {this.props.admin} games = {games}/>\n    return(\n      <div>\n        <form onSubmit={e=>this.handleSubmit(e)}>\n          {/*<input type = 'text' value={this.state.key} onChange={e => this.handleKey(e)}/>*/}\n\n            <Navbar bg=\"dark\" variant=\"dark\">\n            <Nav>\n                <Nav.Item><GameFieldRadioMenu variant=\"warning\" size=\"sm\" name=\"Consoles\" field={consoles} type=\"console\" onChange={e =>this.handleConsole(e)} /></Nav.Item>\n                &nbsp;\n                <Nav.Item><GameFieldRadioMenu size =\"sm\" variant=\"info\" name=\"Playable Modes\" field = {modes} type=\"mode\" onChange={e => this.handleMode(e)} /></Nav.Item>\n                &nbsp;\n                <Nav.Item> <RatingDropdown variant=\"warning\" size=\"sm\" onChange={e => this.handleRating(e)} /></Nav.Item>\n                &nbsp;\n                <Nav.Item><BooleanOptions size=\"sm\" variant=\"info\" title=\"Checked Out?\" name=\"checkedOut\" onChange={e => this.handleCheckedOut(e)} /></Nav.Item>\n                &nbsp;\n                <Nav.Item> <BooleanOptions variant=\"warning\" size=\"sm\" title=\"Digital\" name = \"digital\" onChange={e => this.handleDigital(e)} />\n                </Nav.Item>\n\n            </Nav>\n                &nbsp;\n                <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Keywords</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form inline>\n                        <FormControl width=\"50%\" value={this.state.key}\n                                     onChange={e => this.handleKey(e)} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\n                    </Form>\n                    &nbsp;\n                    <Button type =\"search\" style={{backgroundColor:'pink', color:'purple'}}>Search</Button>\n                </InputGroup>\n\n            </Navbar>\n\n\n        </form>\n\n       {gameList}\n     </div>\n    );\n  }\n\n}\n\nexport default SearchEngine;\n","import React, { Component } from 'react';\n\nclass ConsoleDropdown extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      consoles: [],\n      pickedConsole: null,\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/game/consoles').then(response => response.json())\n    .then(data => this.setState({consoles: data})).catch(console.log(\"could not retrieve consoles\"));\n  }\n\n  changeConsole(e) {\n    this.setState({pickedConsole: e.target.value}, () => {\n      if(!this.props.editMode) {\n        const onAdd = this.props.onAdd;\n        onAdd(this.state.pickedConsole);\n      }\n    });\n  }\n\n\n  render() {\n    const useId = this.props.useId;\n    const consoleMenu = this.state.consoles.map(c => {\n      return(\n        <div>\n          <input type=\"radio\" value={useId ? c.id : c.console} onChange={e=>this.changeConsole(e)} />\n          {c.console}\n        </div>\n      );\n    })\n\n    return(\n      <div>\n        {consoleMenu}\n      </div>\n    );\n\n  }\n\n\n\n\n}\n\nexport default ConsoleDropdown;\n","import React, { Component } from 'react';\nimport GenreDropdown from './GenreDropdown';\nimport RatingDropdown from './RatingDropdown';\nimport ModeDropdown from './ModeDropdown';\nimport ConsoleDropdown from './ConsoleDropdown';\nimport {Form, Row, Col} from 'react-bootstrap';\nimport  {getPassword, adminFetch, adminFetchPost} from \"./Admin\";\n\n\n//TODO put in console dropdwon\nclass AddGameForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: null,\n      rating: 'NONE',\n      quantity: 1,\n      description: null,\n      checkedOut: false,\n      digital: false,\n      console: -1,\n      genres: [],\n      modes: [],\n\n    };\n  }\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {title, checkedOut, digital, quantity, description, rating,genres, modes, console} = this.state;\n    let url = 'http://localhost:8080/admin/addgame';\n    let body ={\n      game: {\n        isCheckedOut: checkedOut,\n        title: title,\n        isDigital: digital,\n        description: description,\n        quantity: quantity,\n        rating: rating,\n      },\n\n      genres: genres,\n      modes: modes,\n      console: {\n        id: console,\n      },\n    };\n    adminFetchPost(url, body).then(() => window.location.reload());\n  }\n\n  changeTitle(e) {\n    this.setState({title: e.target.value});\n  }\n\n  changeDesc(e){\n    this.setState({description: e.target.value});\n  }\n\n  changeCheckedOut(e) {\n    let c = this.state.checkedOut;\n    this.setState({checkedOut: !c});\n  }\n\n  changeDigital(e) {\n    let d = this.state.digital;\n    this.setState({digital: !d});\n  }\n\n  changeQuantity(e) {\n    this.setState({quantity: e.target.value});\n  }\n\n  changeRating(e) {\n    this.setState({rating: e.target.value});\n  }\n\n  addGenre(genres) {\n    this.setState({genres: genres});\n\n  }\n\n  addMode(modes) {\n    this.setState({modes: modes});\n  }\n\n  changeConsole(console) {\n    this.setState({console: console});\n  }\n\n\n  render(){\n    return(\n      <div style={{backgroundColor: \"white\", width:\"60%\", margin:\"0 auto\", padding:\"1%\"}}>\n        <h1 style={{textAlign:\"center\"}}>Add New Game</h1>\n        <form onSubmit={e => this.handleSubmit(e)}>\n          <Form.Group>\n            <Form.Label>Title</Form.Label>\n            <Form.Control size =\"sm\" name=\"title\" value={this.state.title} onChange={e=>this.changeTitle(e)}/>\n          </Form.Group>\n\n          <Form.Group>\n            <Row>\n              <Col>\n                <Form.Label>Checked Out</Form.Label>\n                <Form.Check checked={this.state.checkedOut} name=\"checkedout\" onChange={e=>this.changeCheckedOut(e)}/>\n              </Col>\n              <Col>\n                <Form.Label>Digital</Form.Label>\n                <Form.Check checked={this.state.digital} name=\"digital\" onChange={e=>this.changeDigital(e)}/>\n              </Col>\n            </Row>\n          </Form.Group>\n\n          <Form.Group>\n            <Row>\n              <Col>\n              <Form.Label>Quantity</Form.Label>\n              <input type = \"number\" value = {this.state.quantity} name=\"quantity\" onChange={e => this.changeQuantity(e)} />\n              </Col>\n              <Col>\n              <RatingDropdown onChange={e => this.changeRating(e)} useId={false}/>\n              </Col>\n            </Row>\n\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Description</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"4\" value={this.state.description} onChange={e=>this.changeDesc(e)} />\n          </Form.Group>\n\n          <Form.Group>\n            <Row>\n              <Col>\n                <Form.Label>Genres</Form.Label>\n                <GenreDropdown onAdd={e => this.addGenre(e)} useId={false} editMode={false} onAdd={e=>this.addGenre(e)}/>\n              </Col>\n              <Col>\n                <Form.Label>Playable Modes</Form.Label>\n                <ModeDropdown onAdd={e=>this.addMode(e)} useId={false} editMode={false} onAdd={e=>this.addMode(e)}/>\n              </Col>\n              <Col>\n                <Form.Label>Console</Form.Label>\n                <ConsoleDropdown  useId={true} editMode={false} onAdd={e=>this.changeConsole(e)} />\n              </Col>\n            </Row>\n          </Form.Group>\n          <input type=\"submit\" value=\"Add Game\"/>\n        </form>\n      </div>\n\n\n\n    );\n\n  }//endrender\n\n\n\n}\n\nexport default AddGameForm;\n","import React, { Component } from 'react';\nimport GameFieldEntry from './GameFieldEntry';\nimport {Table, Modal, Button} from 'react-bootstrap';\nimport Admin, {adminFetch} from \"./Admin\";\n\nclass ModeTable extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modes: [],\n      showAlert: false,\n      idToDelete: -1,\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/game/modes').then(response => response.json())\n    .then(data => this.setState({modes: data}));\n  }\n\n  deleteMode(e, modeId) {\n    let url = 'http://localhost:8080/admin/deleteMode?modeId='+modeId;\n    adminFetch(url).then(() => {window.location.reload()});\n  }\n\n  handleShow(e, modeId) {\n    this.setState({\n      showAlert: true,\n      idToDelete: modeId,\n    });\n  }\n\n  handleClose() {\n    this.setState({ showAlert: false, });\n  }\n\n  render() {\n    const modes = this.state.modes;\n    const modeMap = modes.map(m => {\n      return(\n        <GameFieldEntry id={m.id} field={m.mode} onClick={e =>this.handleShow(e, m.id)} />\n      );\n    });\n\n    return(\n      <div style={{width:\"50%\", margin:\"0 auto\"}}>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>Playable Mode ID</th>\n              <th>Genre</th>\n              <th></th>\n            </tr>\n          </thead>\n          {modeMap}\n        </Table>\n\n        <Modal show={this.state.showAlert} onHide={e=>this.handleClose(e)}>\n        <Modal.Header closeButton>\n          WARNING\n        </Modal.Header>\n          <Modal.Body>\n            You are about to delete a playable mode. If you do so, then the mapping of this playable mode to all the\n            other games will also be erased. Are you sure you want to delete it?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={e=> this.deleteMode(e, this.state.idToDelete)}>Delete Playable Mode</Button>\n            <Button variant=\"secondary\" onClick={e=>this.handleClose(e)}>Nevermind</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n\n\n  }\n\n\n}\n\nexport default ModeTable;\n","import React, { Component  } from 'react';\nimport ModeTable from './ModeTable';\nimport {Form, Button} from 'react-bootstrap';\nimport Admin, {adminFetch} from \"./Admin\";\n\nclass EditModePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newMode: '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({ newMode: e.target.value });\n  }\n\n  handleClick(e) {\n    let url = 'http://localhost:8080/admin/addMode?mode='+this.state.newMode;\n    adminFetch(url).then(() => {window.location.reload()});\n  }\n\n  render() {\n    return(\n      <div style={{backgroundColor: \"white\", width:\"80%\", margin:\"0 auto\"}}>\n        <h1 style={{textAlign:\"center\"}}>Edit Playable Modes</h1>\n        <ModeTable />\n        <div style={{width:\"30%\", margin:\"0 auto\"}}>\n          <Form.Group>\n            <Form.Control value={this.state.newMode} onChange={e=>this.handleChange(e)} />\n            <Button onClick={e=>this.handleClick(e)}>Add Playable Mode</Button>\n          </Form.Group>\n        </div>\n        {/*<input type = \"text\" value={this.state.newMode} onChange={e=>this.handleChange(e)} />*/}\n      </div>\n    );\n\n  }\n\n}\n\nexport default EditModePage;\n","import React, {Component} from 'react';\nimport GameFieldEntry from './GameFieldEntry';\nimport {Table, Modal,Button} from 'react-bootstrap';\nimport Admin, {adminFetch} from \"./Admin\";\n\n\nclass GenreTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      genres: [],\n      showAlert: false,\n      idToDelete: -1,\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/game/genres').then(response => response.json())\n    .then(data => this.setState({genres: data}));\n  }\n\n  //TODO do adminFetch\n  deleteGenre(e, genreId) {\n    let url = 'http://localhost:8080/admin/deleteGenre?genreId='+genreId;\n    adminFetch(url)\n        .then(()=>{this.setState({showAlert: false});}).then(() => {window.location.reload();\n    });\n\n  }\n\n  handleShow(e, genreId) {\n    this.setState({\n      showAlert: true,\n      idToDelete: genreId,\n    });\n  }\n\n  handleClose() {\n    this.setState({showAlert: false});\n  }\n\n  render() {\n    const genres = this.state.genres;\n    const genreMap = genres.map( g => {\n      return(\n        <GameFieldEntry id={g.id} field={g.genre} onClick={e=>this.handleShow(e, g.id)} />\n      );\n    });\n\n    return(\n      <div style={{width:\"50%\", margin:\"0 auto\"}}>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>Genre ID</th>\n              <th>Genre</th>\n              <th></th>\n            </tr>\n          </thead>\n          {genreMap}\n        </Table>\n\n        <Modal show={this.state.showAlert} onHide={e=>this.handleClose(e)}>\n          <Modal.Header closeButton>\n            WARNING\n          </Modal.Header>\n          <Modal.Body>\n              You are about to delete a genre. If you do so, then the mapping of this genre to all the\n            other games will also be erased. Are you sure you want to delete it?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={e=>this.deleteGenre(e, this.state.idToDelete)}>Delete Genre</Button>\n            <Button variant=\"secondary\" onClick={e=>this.handleClose(e)}>Nevermind</Button>\n          </Modal.Footer>\n\n        </Modal>\n      </div>\n\n    );\n\n  }\n\n\n\n}\n\nexport default GenreTable;\n","import React, {Component} from 'react';\nimport GenreTable from './GenreTable';\nimport {Form, Button} from 'react-bootstrap';\nimport Admin, {adminFetch} from \"./Admin\"\n\nclass EditGenrePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newGenre: '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({newGenre: e.target.value});\n  }\n\n  handleClick(e) {\n    let url = 'http://localhost:8080/admin/addGenre?genre='+this.state.newGenre;\n    adminFetch(url)\n        .then(th => console.log(\"then\", th))\n        .catch(ct => console.log(ct));\n  }\n\n  render() {\n\n    return(\n      <div style={{backgroundColor: \"white\", width:\"80%\", margin:\"0 auto\"}}>\n        <h1 style={{textAlign:\"center\"}}>Edit Genres</h1>\n        <GenreTable />\n        <div style={{width:\"30%\", margin:\"0 auto\"}}>\n          <Form.Group>\n            <Form.Control value={this.state.newGenre} onChange={e=>this.handleChange(e)} />\n            <Button style={{margin:\"0 auto\"}} onClick={e => this.handleClick(e)}>Add New Genre</Button>\n          </Form.Group>\n        </div>\n      </div>\n\n    );\n\n\n  }\n\n\n}\n\nexport default EditGenrePage;\n","import React, { Component } from 'react';\nimport GameFieldEntry from './GameFieldEntry';\nimport {Table, Modal, Button} from 'react-bootstrap';\nimport Admin, {adminFetch} from \"./Admin\";\n\nclass ConsoleTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      consoles: [],\n      showAlert: false,\n      idToDelete: -1,\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/game/consoles').then(response => response.json())\n    .then(data => this.setState({consoles: data}));\n  }\n\n  deleteConsole(e, consoleId) {\n    let url = 'http://localhost:8080/admin/deleteConsole?consoleId='+consoleId;\n    adminFetch(url).then(() => {window.location.reload()});\n  }\n\n  handleShow(e, consoleId) {\n    this.setState({\n      showAlert: true,\n      idToDelete: consoleId,\n    });\n  }\n\n  handleClose() {\n    this.setState({showAlert: false});\n  }\n\n  render() {\n    const consoles = this.state.consoles;\n    const consoleMap = consoles.map(c => {\n      return(\n        <GameFieldEntry id={c.id} field={c.console} onClick={e => this.handleShow(e, c.id)} />\n      );\n    });\n\n    return(\n      <div style={{width:\"50%\", margin:\"0 auto\"}}>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>Console ID</th>\n              <th>Console</th>\n              <th></th>\n            </tr>\n          </thead>\n          {consoleMap}\n        </Table>\n        <Modal show={this.state.showAlert} onHide={e=>this.handleClose()}>\n          <Modal.Header closeButton>\n            WARNING\n          </Modal.Header>\n          <Modal.Body>\n            You are about to delete a console. If you do so, then the mapping of this console to all the\n            other games will also be erased. Are you sure you want to delete it?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={e=>this.deleteConsole(e, this.state.idToDelete)}>Delete Console</Button>\n            <Button variant=\"secondary\" onClick={e=>this.handleClose()}>Nevermind</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n\n  }\n\n}\n\nexport default ConsoleTable;\n","import React, { Component } from 'react';\nimport ConsoleTable from './ConsoleTable';\nimport {Form, Button} from 'react-bootstrap';\nimport Admin, {adminFetch} from \"./Admin\";\n\nclass EditConsolePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newConsole: '',\n    };\n  }\n\n  handleChange(e) {\n    this.setState({newConsole: e.target.value});\n  }\n\n  handleClick(e) {\n    let url = 'http://localhost:8080/admin/addConsole?console='+this.state.newConsole;\n    adminFetch(url).then(() => {window.location.reload()});\n  }\n\n  render() {\n    return(\n      <div style={{backgroundColor: \"white\", width:\"80%\", margin:\"0 auto\"}}>\n        <h1 style={{textAlign:\"center\"}}>Edit Consoles</h1>\n        <ConsoleTable />\n        <div style={{width:\"30%\", margin:\"0 auto\"}}>\n          <Form.Group >\n            <Form.Control value={this.state.newConsole} onChange={e=>this.handleChange(e)} />\n          {/*<input type = \"text\" value={this.state.newConsole} onChange={e=>this.handleChange(e)} />*/}\n          <Button onClick={e=>this.handleClick(e)}>Add New Console</Button>\n          </Form.Group>\n        </div>\n      </div>\n    );\n  }\n\n\n}\n\nexport default EditConsolePage;\n","import React, {Component} from 'react';\nimport Fonts from './Fonts.css';\nimport {Image} from 'react-bootstrap';\n\nclass About extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div style={{backgroundColor: \"white\", padding: \"5%\", overflow:\"auto\"}}>\n                <h1 style={{textAlign:\"left\", fontFamily:  \"Share Tech Mono, monospace\"}}>Welcome to the Gaming Lab!</h1>\n                <br></br>\n               <center> <Image src=\"https://cdn-images-1.medium.com/max/1600/1*xuYna-3p8tl4VIalflussA.jpeg\"\n                               style = {{width: \"60%\"}}/></center>\n\n                <p></p>\n                <p style={{fontFamily:\"Montserrat\"}}>\n                    Welcome to the Gaming Lab! The Gaming Lab is a space founded\n                    by <a href=\"https://www.smith.edu/academics/faculty/jennifer-malkowski\">Professor Jen Malkowski</a>, a Film and Media Studies professor who is also interested in Game Studies here at Smith.\n                    It is a space where students get to play video games, ranging from AAA games like <i>Uncharted: The Lost Legacy</i> to Indie games like <i>Undertale</i>. We hope to create a safe space for students of all background to have a fun and immersive\n                    experience.\n                </p>\n\n                <p style={{fontFamily: \"Montserrat\"}}>\n                    The Gaming Lab is managed by student Lab Assistants, who will help you pick out a game (or you can use our search engine\n                    to see what games are available), set up your game, and make sure you don't run into any technical issues! If you'd like to know\n                    more about our open hours, then please check out our <a href=\"https://www.facebook.com/gaminglabatsmithcollege/?modal=admin_todo_tour\">Facebook Page!</a> They vary semester to semester.\n                </p>\n\n                <center><a href = \"https://www.smith.edu/about-smith/news/digital-storytelling?fbclid=IwAR2HaFyUzPJ5MuxiUMksIuOUCU5rfB6k3zL8ii2PTWrxqz88mlI5MQM89Is\">\n                    <Image src =\"https://www.smith.edu/sites/default/files/styles/news_header/public/media/-news/Gaming2.jpg?itok=fppJ7Kri\"/></a>\n                    <p></p>\n                    <p style = {{fontFamily: \"Montserrat\"}}> Also if you're interested, check out the Grecourt Gate's article on the Gaming Lab, 'A Space for Digital Storytelling.'</p></center>\n            </div>\n\n\n        );\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport SearchEngine from './SearchEngine';\nimport EditGamePage from './EditGamePage';\nimport AddGameForm from './AddGameForm';\nimport EditModePage from './EditModePage';\nimport EditGenrePage from './EditGenrePage';\nimport EditConsolePage from './EditConsolePage';\nimport Admin from './Admin';\nimport AppRouterStyle from './AppRouterStyle.css';\nimport {Nav, Carousel} from 'react-bootstrap';\nimport LoginPage from './LoginPage';\nimport Fonts from './Fonts.css';\nimport About from './About';\n\nfunction Search(admin) {\n  return(\n    <div>\n        {admin ? (null) : <HomeNav active=\"/game/search\" />}\n      <SearchEngine admin={admin} />\n    </div>\n   );\n}\n\nfunction AdminPage() {\n    return(\n       <Admin />\n    );\n\n}\n\nfunction Home() {\n    return (\n        <div>\n        <HomeNav active=\"/home\" />\n        <Carous />\n\n        </div>\n    );\n}\n\nfunction HomeNav(props) {\n    return(\n        <Nav fill variant=\"tabs\" defaultActiveKey={props.active} style={{fontFamily: \"Share Tech Mono, monospace\"}}>\n            <Nav.Item>\n                <Nav.Link href=\"/home\">Home</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link href=\"/game/search\">Find Games</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link href=\"/game/about\">About</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link href=\"/admin\">Admin</Nav.Link>\n            </Nav.Item>\n        </Nav>\n    );\n}\n\nfunction Carous() {\n    return(\n        <Carousel>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://images.pexels.com/photos/687811/pexels-photo-687811.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\n                    alt=\"First slide\"\n                    style={{height:\"750px\"}}\n                />\n                <Carousel.Caption>\n                    <h3 style={{fontFamily: \"Montserrat\"}}>Play the PS4 at the Gaming Lab</h3>\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://images.pexels.com/photos/371924/pexels-photo-371924.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\n                    alt=\"Third slide\"\n                    style={{height:\"750px\"}}\n                />\n\n                <Carousel.Caption>\n                    <h3 style={{fontFamily: \"Montserrat\"}}>Play Mario Kart 8</h3>\n                    <p style={{fontFamily:\"Montserrat\"}}>On the Nintendo Switch in the Gaming Lab</p>\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src=\"https://images.pexels.com/photos/139038/pexels-photo-139038.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\n                    alt=\"Third slide\"\n                    style={{height:\"750px\"}}\n                />\n\n                <Carousel.Caption>\n                    <h3 style={{fontFamily:\"Montserrat\"}}>Play Xbox One at the Gaming Lab</h3>\n                </Carousel.Caption>\n            </Carousel.Item>\n        </Carousel>\n\n    );\n}\n\nfunction AboutGamingLab() {\n    return(\n        <div>\n            <HomeNav active=\"/game/about\"/>\n            <About />\n        </div>\n    );\n}\n\n\nfunction AppRouter() {\n  return(\n      <div>\n      <h1 className=\"text-center\" style={{fontFamily:\"Share Tech Mono, monospace\", fontSize:\"70px\"}}><b>The Gaming Lab At Smith College</b></h1>\n    <Router>\n      <Route path=\"/home\" component={Home} />\n      <Route path=\"/admin\" component={AdminPage}/>\n      <Route path=\"/admin/editgenre\" component={EditGenrePage} />\n      <Route path=\"/admin/editconsole\" component={EditConsolePage} />\n      <Route path=\"/admin/editmode\" component={EditModePage} />\n      <Route path=\"/game/search\" component={()=>Search(false)} />\n      <Route path=\"/admin/search\" component={()=>Search(true)} />\n      <Route path = \"/admin/addgame\" component={AddGameForm} />\n      <Route path = \"/admin/editgame/gameId=:gameId\" component = {EditGamePage} />\n      <Route path=\"/login\" component={LoginPage}/>\n      <Route path=\"/game/about\" component={AboutGamingLab} />\n    </Router>\n    </div>\n\n  );\n\n\n}//endfxn\n\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './AppRouter';\nimport LoginPage from './LoginPage';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}